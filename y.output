Terminaux inutilisés dans la grammaire

   NUMI
   NUMF
   AND
   OR
   NOT
   DIFF
   EQUAL
   SUP
   INF
   PLUS
   MOINS
   DIV
   DOT
   ARR
   UNA


État 77 conflits: 1 réduction/réduction


Grammaire

    0 $accept: prog $end

    1 prog: block

    2 pre_block: oblock block fblock

    3 oblock: AO

    4 fblock: AF

    5 block: decl_list inst_list

    6 decl_list: decl decl_list
    7          | %empty

    8 decl: var_decl PV
    9     | struct_decl PV
   10     | fun_decl

   11 var_decl: type vlist

   12 struct_decl: STRUCT ID struct

   13 struct: AO attr AF

   14 attr: type ID
   15     | type ID PV attr

   16 fun_decl: type fun

   17 fun: fun_head fun_body

   18 fun_head: ID PO PF
   19         | ID PO params PF

   20 params: type ID vir params
   21       | type ID

   22 vlist: ID vir vlist
   23      | ID

   24 vir: VIR

   25 fun_body: pre_block

   26 type: typename pointer
   27     | typename

   28 typename: TINT
   29         | TFLOAT
   30         | VOID
   31         | STRUCT ID

   32 pointer: pointer STAR
   33        | STAR

   34 inst_list: inst PV inst_list
   35          | inst

   36 inst: exp
   37     | pre_block
   38     | aff
   39     | ret
   40     | cond
   41     | loop
   42     | PV

   43 aff: ID EQ exp
   44    | STAR exp EQ exp

   45 ret: RETURN exp
   46    | RETURN PO PF

   47 cond: if bool_cond stat else stat
   48     | if bool_cond stat

   49 stat: pre_block
   50     | inst PV

   51 bool_cond: PO exp PF

   52 if: IF

   53 else: ELSE

   54 loop: while while_cond stat

   55 while_cond: PO exp PF

   56 while: WHILE

   57 exp: app

   58 app: ID PO args PF

   59 args: arglist
   60     | %empty

   61 arglist: exp VIR arglist
   62        | exp


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
error (256)
NUMI <val> (258)
NUMF <val> (259)
ID <val> (260) 12 14 15 18 19 20 21 22 23 31 43 58
TINT (261) 28
TFLOAT (262) 29
STRUCT (263) 12 31
AO (264) 3 13
AF (265) 4 13
PO (266) 18 19 46 51 55 58
PF (267) 18 19 46 51 55 58
PV (268) 8 9 15 34 42 50
VIR (269) 24 61
RETURN (270) 45 46
VOID (271) 30
EQ (272) 43 44
IF <val> (273) 52
ELSE <val> (274) 53
WHILE <val> (275) 56
AND <val> (276)
OR <val> (277)
NOT <val> (278)
DIFF <val> (279)
EQUAL <val> (280)
SUP <val> (281)
INF <val> (282)
PLUS (283)
MOINS (284)
STAR (285) 32 33 44
DIV (286)
DOT (287)
ARR (288)
UNA (289)


Non-terminaux, suivis des règles où ils apparaissent

$accept (35)
    à gauche: 0
prog (36)
    à gauche: 1, à droite: 0
pre_block (37)
    à gauche: 2, à droite: 25 37 49
oblock (38)
    à gauche: 3, à droite: 2
fblock (39)
    à gauche: 4, à droite: 2
block (40)
    à gauche: 5, à droite: 1 2
decl_list (41)
    à gauche: 6 7, à droite: 5 6
decl (42)
    à gauche: 8 9 10, à droite: 6
var_decl (43)
    à gauche: 11, à droite: 8
struct_decl (44)
    à gauche: 12, à droite: 9
struct (45)
    à gauche: 13, à droite: 12
attr (46)
    à gauche: 14 15, à droite: 13 15
fun_decl (47)
    à gauche: 16, à droite: 10
fun (48)
    à gauche: 17, à droite: 16
fun_head (49)
    à gauche: 18 19, à droite: 17
params (50)
    à gauche: 20 21, à droite: 19 20
vlist <str> (51)
    à gauche: 22 23, à droite: 11 22
vir <typ> (52)
    à gauche: 24, à droite: 20 22
fun_body (53)
    à gauche: 25, à droite: 17
type <typ> (54)
    à gauche: 26 27, à droite: 11 14 15 16 20 21
typename <typ> (55)
    à gauche: 28 29 30 31, à droite: 26 27
pointer (56)
    à gauche: 32 33, à droite: 26 32
inst_list (57)
    à gauche: 34 35, à droite: 5 34
inst (58)
    à gauche: 36 37 38 39 40 41 42, à droite: 34 35 50
aff (59)
    à gauche: 43 44, à droite: 38
ret (60)
    à gauche: 45 46, à droite: 39
cond (61)
    à gauche: 47 48, à droite: 40
stat (62)
    à gauche: 49 50, à droite: 47 48 54
bool_cond <num> (63)
    à gauche: 51, à droite: 47 48
if (64)
    à gauche: 52, à droite: 47 48
else <num> (65)
    à gauche: 53, à droite: 47
loop (66)
    à gauche: 54, à droite: 41
while_cond <num> (67)
    à gauche: 55, à droite: 54
while <num> (68)
    à gauche: 56, à droite: 54
exp <val> (69)
    à gauche: 57, à droite: 36 43 44 45 51 55 61 62
app (70)
    à gauche: 58, à droite: 57
args (71)
    à gauche: 59 60, à droite: 58
arglist (72)
    à gauche: 61 62, à droite: 59 61


État 0

    0 $accept: . prog $end

    TINT    décalage et aller à l'état 1
    TFLOAT  décalage et aller à l'état 2
    STRUCT  décalage et aller à l'état 3
    VOID    décalage et aller à l'état 4

    $défaut  réduction par utilisation de la règle 7 (decl_list)

    prog         aller à l'état 5
    block        aller à l'état 6
    decl_list    aller à l'état 7
    decl         aller à l'état 8
    var_decl     aller à l'état 9
    struct_decl  aller à l'état 10
    fun_decl     aller à l'état 11
    type         aller à l'état 12
    typename     aller à l'état 13


État 1

   28 typename: TINT .

    $défaut  réduction par utilisation de la règle 28 (typename)


État 2

   29 typename: TFLOAT .

    $défaut  réduction par utilisation de la règle 29 (typename)


État 3

   12 struct_decl: STRUCT . ID struct
   31 typename: STRUCT . ID

    ID  décalage et aller à l'état 14


État 4

   30 typename: VOID .

    $défaut  réduction par utilisation de la règle 30 (typename)


État 5

    0 $accept: prog . $end

    $end  décalage et aller à l'état 15


État 6

    1 prog: block .

    $défaut  réduction par utilisation de la règle 1 (prog)


État 7

    5 block: decl_list . inst_list

    ID      décalage et aller à l'état 16
    AO      décalage et aller à l'état 17
    PV      décalage et aller à l'état 18
    RETURN  décalage et aller à l'état 19
    IF      décalage et aller à l'état 20
    WHILE   décalage et aller à l'état 21
    STAR    décalage et aller à l'état 22

    pre_block  aller à l'état 23
    oblock     aller à l'état 24
    inst_list  aller à l'état 25
    inst       aller à l'état 26
    aff        aller à l'état 27
    ret        aller à l'état 28
    cond       aller à l'état 29
    if         aller à l'état 30
    loop       aller à l'état 31
    while      aller à l'état 32
    exp        aller à l'état 33
    app        aller à l'état 34


État 8

    6 decl_list: decl . decl_list

    TINT    décalage et aller à l'état 1
    TFLOAT  décalage et aller à l'état 2
    STRUCT  décalage et aller à l'état 3
    VOID    décalage et aller à l'état 4

    $défaut  réduction par utilisation de la règle 7 (decl_list)

    decl_list    aller à l'état 35
    decl         aller à l'état 8
    var_decl     aller à l'état 9
    struct_decl  aller à l'état 10
    fun_decl     aller à l'état 11
    type         aller à l'état 12
    typename     aller à l'état 13


État 9

    8 decl: var_decl . PV

    PV  décalage et aller à l'état 36


État 10

    9 decl: struct_decl . PV

    PV  décalage et aller à l'état 37


État 11

   10 decl: fun_decl .

    $défaut  réduction par utilisation de la règle 10 (decl)


État 12

   11 var_decl: type . vlist
   16 fun_decl: type . fun

    ID  décalage et aller à l'état 38

    fun       aller à l'état 39
    fun_head  aller à l'état 40
    vlist     aller à l'état 41


État 13

   26 type: typename . pointer
   27     | typename .

    STAR  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 27 (type)

    pointer  aller à l'état 43


État 14

   12 struct_decl: STRUCT ID . struct
   31 typename: STRUCT ID .

    AO  décalage et aller à l'état 44

    $défaut  réduction par utilisation de la règle 31 (typename)

    struct  aller à l'état 45


État 15

    0 $accept: prog $end .

    $défaut  accepter


État 16

   43 aff: ID . EQ exp
   58 app: ID . PO args PF

    PO  décalage et aller à l'état 46
    EQ  décalage et aller à l'état 47


État 17

    3 oblock: AO .

    $défaut  réduction par utilisation de la règle 3 (oblock)


État 18

   42 inst: PV .

    $défaut  réduction par utilisation de la règle 42 (inst)


État 19

   45 ret: RETURN . exp
   46    | RETURN . PO PF

    ID  décalage et aller à l'état 48
    PO  décalage et aller à l'état 49

    exp  aller à l'état 50
    app  aller à l'état 34


État 20

   52 if: IF .

    $défaut  réduction par utilisation de la règle 52 (if)


État 21

   56 while: WHILE .

    $défaut  réduction par utilisation de la règle 56 (while)


État 22

   44 aff: STAR . exp EQ exp

    ID  décalage et aller à l'état 48

    exp  aller à l'état 51
    app  aller à l'état 34


État 23

   37 inst: pre_block .

    $défaut  réduction par utilisation de la règle 37 (inst)


État 24

    2 pre_block: oblock . block fblock

    TINT    décalage et aller à l'état 1
    TFLOAT  décalage et aller à l'état 2
    STRUCT  décalage et aller à l'état 3
    VOID    décalage et aller à l'état 4

    $défaut  réduction par utilisation de la règle 7 (decl_list)

    block        aller à l'état 52
    decl_list    aller à l'état 7
    decl         aller à l'état 8
    var_decl     aller à l'état 9
    struct_decl  aller à l'état 10
    fun_decl     aller à l'état 11
    type         aller à l'état 12
    typename     aller à l'état 13


État 25

    5 block: decl_list inst_list .

    $défaut  réduction par utilisation de la règle 5 (block)


État 26

   34 inst_list: inst . PV inst_list
   35          | inst .

    PV  décalage et aller à l'état 53

    $défaut  réduction par utilisation de la règle 35 (inst_list)


État 27

   38 inst: aff .

    $défaut  réduction par utilisation de la règle 38 (inst)


État 28

   39 inst: ret .

    $défaut  réduction par utilisation de la règle 39 (inst)


État 29

   40 inst: cond .

    $défaut  réduction par utilisation de la règle 40 (inst)


État 30

   47 cond: if . bool_cond stat else stat
   48     | if . bool_cond stat

    PO  décalage et aller à l'état 54

    bool_cond  aller à l'état 55


État 31

   41 inst: loop .

    $défaut  réduction par utilisation de la règle 41 (inst)


État 32

   54 loop: while . while_cond stat

    PO  décalage et aller à l'état 56

    while_cond  aller à l'état 57


État 33

   36 inst: exp .

    $défaut  réduction par utilisation de la règle 36 (inst)


État 34

   57 exp: app .

    $défaut  réduction par utilisation de la règle 57 (exp)


État 35

    6 decl_list: decl decl_list .

    $défaut  réduction par utilisation de la règle 6 (decl_list)


État 36

    8 decl: var_decl PV .

    $défaut  réduction par utilisation de la règle 8 (decl)


État 37

    9 decl: struct_decl PV .

    $défaut  réduction par utilisation de la règle 9 (decl)


État 38

   18 fun_head: ID . PO PF
   19         | ID . PO params PF
   22 vlist: ID . vir vlist
   23      | ID .

    PO   décalage et aller à l'état 58
    VIR  décalage et aller à l'état 59

    $défaut  réduction par utilisation de la règle 23 (vlist)

    vir  aller à l'état 60


État 39

   16 fun_decl: type fun .

    $défaut  réduction par utilisation de la règle 16 (fun_decl)


État 40

   17 fun: fun_head . fun_body

    AO  décalage et aller à l'état 17

    pre_block  aller à l'état 61
    oblock     aller à l'état 24
    fun_body   aller à l'état 62


État 41

   11 var_decl: type vlist .

    $défaut  réduction par utilisation de la règle 11 (var_decl)


État 42

   33 pointer: STAR .

    $défaut  réduction par utilisation de la règle 33 (pointer)


État 43

   26 type: typename pointer .
   32 pointer: pointer . STAR

    STAR  décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 26 (type)


État 44

   13 struct: AO . attr AF

    TINT    décalage et aller à l'état 1
    TFLOAT  décalage et aller à l'état 2
    STRUCT  décalage et aller à l'état 64
    VOID    décalage et aller à l'état 4

    attr      aller à l'état 65
    type      aller à l'état 66
    typename  aller à l'état 13


État 45

   12 struct_decl: STRUCT ID struct .

    $défaut  réduction par utilisation de la règle 12 (struct_decl)


État 46

   58 app: ID PO . args PF

    ID  décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 60 (args)

    exp      aller à l'état 67
    app      aller à l'état 34
    args     aller à l'état 68
    arglist  aller à l'état 69


État 47

   43 aff: ID EQ . exp

    ID  décalage et aller à l'état 48

    exp  aller à l'état 70
    app  aller à l'état 34


État 48

   58 app: ID . PO args PF

    PO  décalage et aller à l'état 46


État 49

   46 ret: RETURN PO . PF

    PF  décalage et aller à l'état 71


État 50

   45 ret: RETURN exp .

    $défaut  réduction par utilisation de la règle 45 (ret)


État 51

   44 aff: STAR exp . EQ exp

    EQ  décalage et aller à l'état 72


État 52

    2 pre_block: oblock block . fblock

    AF  décalage et aller à l'état 73

    fblock  aller à l'état 74


État 53

   34 inst_list: inst PV . inst_list

    ID      décalage et aller à l'état 16
    AO      décalage et aller à l'état 17
    PV      décalage et aller à l'état 18
    RETURN  décalage et aller à l'état 19
    IF      décalage et aller à l'état 20
    WHILE   décalage et aller à l'état 21
    STAR    décalage et aller à l'état 22

    pre_block  aller à l'état 23
    oblock     aller à l'état 24
    inst_list  aller à l'état 75
    inst       aller à l'état 26
    aff        aller à l'état 27
    ret        aller à l'état 28
    cond       aller à l'état 29
    if         aller à l'état 30
    loop       aller à l'état 31
    while      aller à l'état 32
    exp        aller à l'état 33
    app        aller à l'état 34


État 54

   51 bool_cond: PO . exp PF

    ID  décalage et aller à l'état 48

    exp  aller à l'état 76
    app  aller à l'état 34


État 55

   47 cond: if bool_cond . stat else stat
   48     | if bool_cond . stat

    ID      décalage et aller à l'état 16
    AO      décalage et aller à l'état 17
    PV      décalage et aller à l'état 18
    RETURN  décalage et aller à l'état 19
    IF      décalage et aller à l'état 20
    WHILE   décalage et aller à l'état 21
    STAR    décalage et aller à l'état 22

    pre_block  aller à l'état 77
    oblock     aller à l'état 24
    inst       aller à l'état 78
    aff        aller à l'état 27
    ret        aller à l'état 28
    cond       aller à l'état 29
    stat       aller à l'état 79
    if         aller à l'état 30
    loop       aller à l'état 31
    while      aller à l'état 32
    exp        aller à l'état 33
    app        aller à l'état 34


État 56

   55 while_cond: PO . exp PF

    ID  décalage et aller à l'état 48

    exp  aller à l'état 80
    app  aller à l'état 34


État 57

   54 loop: while while_cond . stat

    ID      décalage et aller à l'état 16
    AO      décalage et aller à l'état 17
    PV      décalage et aller à l'état 18
    RETURN  décalage et aller à l'état 19
    IF      décalage et aller à l'état 20
    WHILE   décalage et aller à l'état 21
    STAR    décalage et aller à l'état 22

    pre_block  aller à l'état 77
    oblock     aller à l'état 24
    inst       aller à l'état 78
    aff        aller à l'état 27
    ret        aller à l'état 28
    cond       aller à l'état 29
    stat       aller à l'état 81
    if         aller à l'état 30
    loop       aller à l'état 31
    while      aller à l'état 32
    exp        aller à l'état 33
    app        aller à l'état 34


État 58

   18 fun_head: ID PO . PF
   19         | ID PO . params PF

    TINT    décalage et aller à l'état 1
    TFLOAT  décalage et aller à l'état 2
    STRUCT  décalage et aller à l'état 64
    PF      décalage et aller à l'état 82
    VOID    décalage et aller à l'état 4

    params    aller à l'état 83
    type      aller à l'état 84
    typename  aller à l'état 13


État 59

   24 vir: VIR .

    $défaut  réduction par utilisation de la règle 24 (vir)


État 60

   22 vlist: ID vir . vlist

    ID  décalage et aller à l'état 85

    vlist  aller à l'état 86


État 61

   25 fun_body: pre_block .

    $défaut  réduction par utilisation de la règle 25 (fun_body)


État 62

   17 fun: fun_head fun_body .

    $défaut  réduction par utilisation de la règle 17 (fun)


État 63

   32 pointer: pointer STAR .

    $défaut  réduction par utilisation de la règle 32 (pointer)


État 64

   31 typename: STRUCT . ID

    ID  décalage et aller à l'état 87


État 65

   13 struct: AO attr . AF

    AF  décalage et aller à l'état 88


État 66

   14 attr: type . ID
   15     | type . ID PV attr

    ID  décalage et aller à l'état 89


État 67

   61 arglist: exp . VIR arglist
   62        | exp .

    VIR  décalage et aller à l'état 90

    $défaut  réduction par utilisation de la règle 62 (arglist)


État 68

   58 app: ID PO args . PF

    PF  décalage et aller à l'état 91


État 69

   59 args: arglist .

    $défaut  réduction par utilisation de la règle 59 (args)


État 70

   43 aff: ID EQ exp .

    $défaut  réduction par utilisation de la règle 43 (aff)


État 71

   46 ret: RETURN PO PF .

    $défaut  réduction par utilisation de la règle 46 (ret)


État 72

   44 aff: STAR exp EQ . exp

    ID  décalage et aller à l'état 48

    exp  aller à l'état 92
    app  aller à l'état 34


État 73

    4 fblock: AF .

    $défaut  réduction par utilisation de la règle 4 (fblock)


État 74

    2 pre_block: oblock block fblock .

    $défaut  réduction par utilisation de la règle 2 (pre_block)


État 75

   34 inst_list: inst PV inst_list .

    $défaut  réduction par utilisation de la règle 34 (inst_list)


État 76

   51 bool_cond: PO exp . PF

    PF  décalage et aller à l'état 93


État 77

   37 inst: pre_block .
   49 stat: pre_block .

    PV        réduction par utilisation de la règle 37 (inst)
    PV        [réduction par utilisation de la règle 49 (stat)]
    $défaut  réduction par utilisation de la règle 49 (stat)


État 78

   50 stat: inst . PV

    PV  décalage et aller à l'état 94


État 79

   47 cond: if bool_cond stat . else stat
   48     | if bool_cond stat .

    ELSE  décalage et aller à l'état 95

    $défaut  réduction par utilisation de la règle 48 (cond)

    else  aller à l'état 96


État 80

   55 while_cond: PO exp . PF

    PF  décalage et aller à l'état 97


État 81

   54 loop: while while_cond stat .

    $défaut  réduction par utilisation de la règle 54 (loop)


État 82

   18 fun_head: ID PO PF .

    $défaut  réduction par utilisation de la règle 18 (fun_head)


État 83

   19 fun_head: ID PO params . PF

    PF  décalage et aller à l'état 98


État 84

   20 params: type . ID vir params
   21       | type . ID

    ID  décalage et aller à l'état 99


État 85

   22 vlist: ID . vir vlist
   23      | ID .

    VIR  décalage et aller à l'état 59

    $défaut  réduction par utilisation de la règle 23 (vlist)

    vir  aller à l'état 60


État 86

   22 vlist: ID vir vlist .

    $défaut  réduction par utilisation de la règle 22 (vlist)


État 87

   31 typename: STRUCT ID .

    $défaut  réduction par utilisation de la règle 31 (typename)


État 88

   13 struct: AO attr AF .

    $défaut  réduction par utilisation de la règle 13 (struct)


État 89

   14 attr: type ID .
   15     | type ID . PV attr

    PV  décalage et aller à l'état 100

    $défaut  réduction par utilisation de la règle 14 (attr)


État 90

   61 arglist: exp VIR . arglist

    ID  décalage et aller à l'état 48

    exp      aller à l'état 67
    app      aller à l'état 34
    arglist  aller à l'état 101


État 91

   58 app: ID PO args PF .

    $défaut  réduction par utilisation de la règle 58 (app)


État 92

   44 aff: STAR exp EQ exp .

    $défaut  réduction par utilisation de la règle 44 (aff)


État 93

   51 bool_cond: PO exp PF .

    $défaut  réduction par utilisation de la règle 51 (bool_cond)


État 94

   50 stat: inst PV .

    $défaut  réduction par utilisation de la règle 50 (stat)


État 95

   53 else: ELSE .

    $défaut  réduction par utilisation de la règle 53 (else)


État 96

   47 cond: if bool_cond stat else . stat

    ID      décalage et aller à l'état 16
    AO      décalage et aller à l'état 17
    PV      décalage et aller à l'état 18
    RETURN  décalage et aller à l'état 19
    IF      décalage et aller à l'état 20
    WHILE   décalage et aller à l'état 21
    STAR    décalage et aller à l'état 22

    pre_block  aller à l'état 77
    oblock     aller à l'état 24
    inst       aller à l'état 78
    aff        aller à l'état 27
    ret        aller à l'état 28
    cond       aller à l'état 29
    stat       aller à l'état 102
    if         aller à l'état 30
    loop       aller à l'état 31
    while      aller à l'état 32
    exp        aller à l'état 33
    app        aller à l'état 34


État 97

   55 while_cond: PO exp PF .

    $défaut  réduction par utilisation de la règle 55 (while_cond)


État 98

   19 fun_head: ID PO params PF .

    $défaut  réduction par utilisation de la règle 19 (fun_head)


État 99

   20 params: type ID . vir params
   21       | type ID .

    VIR  décalage et aller à l'état 59

    $défaut  réduction par utilisation de la règle 21 (params)

    vir  aller à l'état 103


État 100

   15 attr: type ID PV . attr

    TINT    décalage et aller à l'état 1
    TFLOAT  décalage et aller à l'état 2
    STRUCT  décalage et aller à l'état 64
    VOID    décalage et aller à l'état 4

    attr      aller à l'état 104
    type      aller à l'état 66
    typename  aller à l'état 13


État 101

   61 arglist: exp VIR arglist .

    $défaut  réduction par utilisation de la règle 61 (arglist)


État 102

   47 cond: if bool_cond stat else stat .

    $défaut  réduction par utilisation de la règle 47 (cond)


État 103

   20 params: type ID vir . params

    TINT    décalage et aller à l'état 1
    TFLOAT  décalage et aller à l'état 2
    STRUCT  décalage et aller à l'état 64
    VOID    décalage et aller à l'état 4

    params    aller à l'état 105
    type      aller à l'état 84
    typename  aller à l'état 13


État 104

   15 attr: type ID PV attr .

    $défaut  réduction par utilisation de la règle 15 (attr)


État 105

   20 params: type ID vir params .

    $défaut  réduction par utilisation de la règle 20 (params)
